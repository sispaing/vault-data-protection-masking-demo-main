#!/usr/bin/env bash

sudo apt-get install net-tools
##--------------------------------------------------------------------
## Install mysql client
##--------------------------------------------------------------------

sudo apt-get -y update
sudo apt-get -y install net-tools
sudo apt -y install python3.12-venv
sudo apt-get -y install mysql-client
mysql --version

##--------------------------------------------------------------------
## Install Vault
##--------------------------------------------------------------------

sudo apt -y update && sudo apt -y install gpg wget
wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
gpg --no-default-keyring --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg --fingerprint
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
sudo apt -y update && sudo apt -y install vault
vault version

##--------------------------------------------------------------------
## Create vault user and vault group
##--------------------------------------------------------------------
sudo chmod +x /home/ubuntu/mysql-script.sh

sudo /home/ubuntu/mysql-script.sh
sudo groupadd --gid 864 vault
sudo useradd --uid 864 --gid 864 \
               --shell /bin/false \
               --no-create-home \
               vault

sudo chown vault:vault /usr/bin/vault

##--------------------------------------------------------------------
## Template file
##--------------------------------------------------------------------
sudo -u vault cat << EOF > /home/ubuntu/mysql-tmpl.tmpl
{{ with secret "db/creds/readwrite-role" }} 
Username: {{ .Data.username }} 
Password: {{ .Data.password }}{{ end }}
EOF
sudo chmod 0775 /home/ubuntu/mysql-tmpl.tmpl


##--------------------------------------------------------------------
## Create role_id_file_path
##--------------------------------------------------------------------
sudo -u vault cat << EOF > /home/ubuntu/login_role_id
${login_role_id}
EOF
sudo chmod 0600 /home/ubuntu/login_role_id


##--------------------------------------------------------------------
## secret_id_file_path
##--------------------------------------------------------------------
sudo -u vault cat << EOF > /home/ubuntu/login_secret_id
${login_secret_id}
EOF
sudo chmod 0600 /home/ubuntu/login_secret_id

##--------------------------------------------------------------------
## Create Vault Agent Configuration File
##--------------------------------------------------------------------
sudo -u vault cat << EOF > /home/ubuntu/vault-agent.hcl
#exit_after_auth = true
pid_file = "./pidfile"

auto_auth {
   method "approle" {
       mount_path = "auth/tfc-approle"
       namespace = "admin"
       config = {
           role_id_file_path = "/home/ubuntu/login_role_id"
           secret_id_file_path = "/home/ubuntu/login_secret_id"
           remove_secret_id_file_after_reading = false
       }
   }

   sink "file" {
       config = {
           path = "/home/ubuntu/vault_token"
       }
   }
}

vault {
   address = "${tpl_vault_server_addr}"
}

listener "tcp" {
  address = "127.0.0.1:8007"
  tls_disable = true
}

cache {
  use_auto_auth_token = true
}

template_config {
  static_secret_render_interval = "10m"
  exit_on_retry_failure = true
  max_connections_per_host = 20
  lease_renewal_threshold = 0.90
}

template {
  source = "/home/ubuntu/mysql-tmpl.tmpl"
  destination  = "/tmp/agent/render-content.txt"
}
EOF

sudo chmod 0775 /home/ubuntu/vault-agent.hcl

#  contents     = "{{ with secret \"db/creds/readwrite-role\" }} Username: {{ .Data.username }} Password: {{ .Data.password }}{{ end }}"

##--------------------------------------------------------------------
## Vault Agent Service
##--------------------------------------------------------------------

sudo -u vault cat << EOF > /lib/systemd/system/vault-agent.service
[Unit]
Description=Vault Agent
Requires=network-online.target
After=network-online.target
[Service]
User=vault
Group=vault
Restart=on-failure
ExecStart=/usr/bin/vault agent -config /home/ubuntu/vault-agent.hcl -log-level=debug
KillSignal=SIGTERM
[Install]
WantedBy=multi-user.target
EOF

sudo chmod 0664 /lib/systemd/system/vault.service
sudo systemctl daemon-reload

systemctl enable vault-agent
systemctl start vault-agent


##--------------------------------------------------------------------
## Create Vault.py
##--------------------------------------------------------------------
sudo chown ubuntu:ubuntu /home/ubuntu/vault_token
mkdir /home/ubuntu/python
cat << EOF > /home/ubuntu/python/vault.py
import hvac
import json

def pretty_print_response(response):
    print(json.dumps(response, indent=2, sort_keys=True))

VAULT_URL='http://127.0.0.1:8007'
# You must get the Vault token from the Sink file to use it
with open("/home/ubuntu/vault_token") as f:
        VAULT_TOKEN = f.readlines()
        VAULT_TOKEN = VAULT_TOKEN[0].strip('\n')

print(f'Vault token = {VAULT_TOKEN}')

client = hvac.Client(url=VAULT_URL, token=VAULT_TOKEN, namespace='admin')
current_token = client.lookup_token()
pretty_print_response(current_token)
print('This is the current token: ', current_token)
# Read the data written under path: secret/data/test
read_response = client.secrets.database.generate_credentials(
    name='readwrite-role', mount_point='db')

pretty_print_response(read_response)
print(f"Here is the DB Username: {read_response['data']['username']}")
print(f"Here is the DB Password: {read_response['data']['password']}")
with open("response.txt", "w") as f:
    f.write(f"Username: {read_response['data']['username']}\nPassword: {read_response['data']['password']}\n")
    f.close()
EOF

sudo chmod 0775 /home/ubuntu/python/vault.py
sudo chown ubuntu:ubuntu /home/ubuntu/python/ -R